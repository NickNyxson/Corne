/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Left_Bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 5>;
        };

        Right_Bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
        };

        Left_Parethesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        Right_Parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        Left_Brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };

        Right_Brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };

        Back_Slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 31>;
        };

        Slash {
            bindings = <&kp SLASH>;
            key-positions = <28 7>;
        };

        Toggle_Gaming_Layer {
            bindings = <&tog 4>;
            key-positions = <0 1>;
        };
        
        Minus_Underscore {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
        };

        Equal_Plus {
            bindings = <&kp EQUAL>;
            key-positions = <31 32>;
        };

        Multiply {
            bindings = <&kp ASTRK>;
            key-positions = <20 21>;
        };
        
        F_one {
            bindings = <&kp F1>;
            key-positions = <1 2>;
        };
        
        F_two {
            bindings = <&kp F2>;
            key-positions = <1 3>;
        };
        
        F_three {
            bindings = <&kp F3>;
            key-positions = <1 4>;
        };

        F_four {
            bindings = <&kp F4>;
            key-positions = <1 5>;
        };

        F_five {
            bindings = <&kp F5>;
            key-positions = <2 3>;
        };

        F_six {
            bindings = <&kp F6>;
            key-positions = <2 4>;
        };

        F_seven {
            bindings = <&kp F7>;
            key-positions = <2 5>;
        };
        
        F_eight {
            bindings = <&kp F8>;
            key-positions = <3 4>;
        };

        F_nine {
            bindings = <&kp F9>;
            key-positions = <3 5>;
        };

        F_ten {
            bindings = <&kp F10>;
            key-positions = <1 2 3>;
        };

        F_eleven {
            bindings = <&kp F11>;
            key-positions = <1 2 4>;
        };

        F_twelve {
            bindings = <&kp F12>;
            key-positions = <1 2 5>;
        };
    };

    macros {
    };
    
  keymap {
        compatible = "zmk,keymap";

        base {

            bindings = <
   &kp ESC       &kp Q       &kp W        &kp E         &kp R      &kp T                    &kp Y         &kp U           &kp I       &kp O          &kp P  &kp MINUS
 &kp LCTRL  &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHIFT F      &kp G                    &kp H  &hm RSHIFT J     &hm RCTRL K  &hm RALT L  &hm RGUI SEMI   &kp APOS
 &kp LSHFT       &kp Z       &kp X        &kp C         &kp V      &kp B                    &kp N         &kp M       &kp COMMA     &kp DOT       &kp FSLH  &kp EQUAL
                                     &kp C_MUTE     &kp ENTER  &lt 1 TAB          &lt 2 BACKSPACE     &kp SPACE  &kp LEFT_SHIFT
            >;
                   sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise {
            bindings = <
 &trans  &kp EXCLAMATION        &kp AT      &kp HASH          &kp DLLR     &kp PERCENT                &kp CARET           &kp AMPS     &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &kp PIPE
 &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4    &kp NUMBER_5             &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0      &kp COLON
 &trans          &kp ESC     &kp TILDE     &kp GRAVE  &kp LEFT_BRACKET  &kp LEFT_BRACE          &kp RIGHT_BRACE  &kp RIGHT_BRACKET        &trans                &trans                 &trans  &kp BACKSLASH
                                              &trans            &trans          &trans                    &mo 3             &trans        &trans
            >;
        };

        lower {
            bindings = <
 &trans    &kp F1   &kp F2         &kp F3          &kp F4         &kp F5                    &kp F6      &kp F7      &kp F8        &kp F9       &kp F10  &kp DELETE
 &trans  &kp HOME  &kp END         &trans          &trans    &kp PAGE_UP                  &kp LEFT    &kp DOWN      &kp UP     &kp RIGHT        &trans     &kp F11
 &trans    &trans   &trans  &kp C_AC_COPY  &kp C_AC_PASTE  &kp PAGE_DOWN          &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP     &kp F12
                                   &trans          &trans          &mo 3                    &trans      &trans      &trans
            >;
        };

        Functions {
            bindings = <
   &bt BT_NXT  &bt BT_SEL 1  &trans  &trans      &trans  &trans          &trans        &trans  &trans  &trans  &trans             &reset
   &bt BT_PRV  &bt BT_SEL 2  &trans  &trans      &trans  &tog 4          &trans        &trans  &trans  &trans  &trans  &ext_power EP_OFF
 &bt BT_SEL 4  &bt BT_SEL 3  &trans  &trans      &trans  &trans          &trans        &trans  &trans  &trans  &trans        &bootloader
                                     &trans  &bt BT_CLR  &trans          &trans  &out OUT_TOG  &trans
            >;
        };

        Gaming {
            bindings = <
        &kp ESC   &kp Q   &kp W      &kp E      &kp R         &kp T           &kp Y   &kp U      &kp I    &kp O          &kp P  &kp MINUS
        &kp TAB   &kp A   &kp S      &kp D      &kp F         &kp G           &kp H   &kp J      &kp K    &kp L  &kp SEMICOLON   &kp APOS
 &kp LEFT_SHIFT   &kp Z   &kp X      &kp C      &kp V         &kp B           &kp N   &kp M  &kp COMMA  &kp DOT       &kp FSLH  &kp EQUAL
                                 &kp LCTRL  &kp SPACE  &kp LEFT_ALT          &trans  &trans     &trans
            >;
        };
    };
};
